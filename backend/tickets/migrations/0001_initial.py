# Generated by Django 5.1.12 on 2025-09-08 19:29

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Ticket",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "ticket_number",
                    models.CharField(
                        editable=False,
                        help_text="Auto-generated ticket number",
                        max_length=20,
                        unique=True,
                    ),
                ),
                (
                    "organization",
                    models.CharField(
                        help_text="Organization or company name", max_length=255
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("open", "Open"),
                            ("in_progress", "In Progress"),
                            ("closed", "Closed"),
                        ],
                        default="open",
                        help_text="Current status of the ticket",
                        max_length=20,
                    ),
                ),
                (
                    "location",
                    models.CharField(
                        help_text="Location where work is to be performed",
                        max_length=255,
                    ),
                ),
                (
                    "notes",
                    models.TextField(
                        blank=True, help_text="Additional notes and details"
                    ),
                ),
                ("created_date", models.DateTimeField(auto_now_add=True)),
                (
                    "expiration_date",
                    models.DateTimeField(help_text="Date when the ticket expires"),
                ),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "assigned_contractor",
                    models.ForeignKey(
                        help_text="Contractor assigned to this ticket",
                        limit_choices_to={"role": "contractor"},
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="assigned_tickets",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        help_text="User who created this ticket",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="created_tickets",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        help_text="User who last updated this ticket",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="updated_tickets",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "tickets_ticket",
                "ordering": ["-created_date"],
            },
        ),
        migrations.CreateModel(
            name="TicketLog",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "action",
                    models.CharField(
                        choices=[
                            ("created", "Created"),
                            ("updated", "Updated"),
                            ("status_changed", "Status Changed"),
                            ("assigned", "Assigned"),
                            ("renewed", "Renewed"),
                            ("closed", "Closed"),
                            ("reopened", "Reopened"),
                        ],
                        help_text="Type of action performed on the ticket",
                        max_length=50,
                    ),
                ),
                ("timestamp", models.DateTimeField(auto_now_add=True)),
                (
                    "details",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        help_text="Additional context about the action",
                    ),
                ),
                (
                    "previous_values",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        help_text="Previous field values before the change",
                    ),
                ),
                (
                    "action_by",
                    models.ForeignKey(
                        help_text="User who performed the action",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="ticket_actions",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "ticket",
                    models.ForeignKey(
                        help_text="Ticket that was modified",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="ticket_logs",
                        to="tickets.ticket",
                    ),
                ),
            ],
            options={
                "db_table": "tickets_ticketlog",
                "ordering": ["-timestamp"],
            },
        ),
        migrations.CreateModel(
            name="UserLog",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "action",
                    models.CharField(
                        choices=[
                            ("login", "Login"),
                            ("logout", "Logout"),
                            ("profile_update", "Profile Update"),
                            ("password_change", "Password Change"),
                            ("two_factor_enable", "2FA Enable"),
                            ("two_factor_disable", "2FA Disable"),
                            ("ticket_created", "Ticket Created"),
                            ("ticket_updated", "Ticket Updated"),
                            ("ticket_closed", "Ticket Closed"),
                            ("ticket_renewed", "Ticket Renewed"),
                            ("ticket_assigned", "Ticket Assigned"),
                        ],
                        help_text="Type of action performed",
                        max_length=50,
                    ),
                ),
                ("timestamp", models.DateTimeField(auto_now_add=True)),
                (
                    "details",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        help_text="Additional context and details about the action",
                    ),
                ),
                (
                    "ip_address",
                    models.GenericIPAddressField(
                        blank=True,
                        help_text="IP address from which the action was performed",
                        null=True,
                    ),
                ),
                (
                    "related_ticket",
                    models.ForeignKey(
                        blank=True,
                        help_text="Related ticket for ticket-specific actions",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="user_logs",
                        to="tickets.ticket",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        help_text="User who performed the action",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="user_logs",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "tickets_userlog",
                "ordering": ["-timestamp"],
            },
        ),
        migrations.AddIndex(
            model_name="ticket",
            index=models.Index(fields=["status"], name="tickets_tic_status_0e5646_idx"),
        ),
        migrations.AddIndex(
            model_name="ticket",
            index=models.Index(
                fields=["assigned_contractor"], name="tickets_tic_assigne_7d24fe_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="ticket",
            index=models.Index(
                fields=["created_date"], name="tickets_tic_created_ba6569_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="ticket",
            index=models.Index(
                fields=["expiration_date"], name="tickets_tic_expirat_3770be_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="ticket",
            index=models.Index(
                fields=["ticket_number"], name="tickets_tic_ticket__bf3905_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="ticketlog",
            index=models.Index(
                fields=["ticket"], name="tickets_tic_ticket__890f00_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="ticketlog",
            index=models.Index(
                fields=["action_by"], name="tickets_tic_action__ebec8b_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="ticketlog",
            index=models.Index(fields=["action"], name="tickets_tic_action_94c4a9_idx"),
        ),
        migrations.AddIndex(
            model_name="ticketlog",
            index=models.Index(
                fields=["timestamp"], name="tickets_tic_timesta_f10e51_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="userlog",
            index=models.Index(fields=["user"], name="tickets_use_user_id_b720ec_idx"),
        ),
        migrations.AddIndex(
            model_name="userlog",
            index=models.Index(fields=["action"], name="tickets_use_action_f89cfb_idx"),
        ),
        migrations.AddIndex(
            model_name="userlog",
            index=models.Index(
                fields=["timestamp"], name="tickets_use_timesta_eba363_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="userlog",
            index=models.Index(
                fields=["related_ticket"], name="tickets_use_related_8fd569_idx"
            ),
        ),
    ]
